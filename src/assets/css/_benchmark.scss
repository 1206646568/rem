/**
  * 一般用于提示的颜色标准
  * 创建sass变量,使用‘-’与‘_’是互通的（包括混合器与sass函数）
  * */
html{
  height: 100%
}
$primary:#409eff;
$success:#67c23a;
$info:#909399;
$warning:#e6a23c;
$danger:#f56c6c;
@function px2rem($px){
  // 因设置了当前设备宽度 / 10 
  // 则 1 rem = (基准设备375) / 10
  $rem:37.5px;
  @return ($px / $rem) + rem;
}

// @mixin px2rem($property, $px-values, $baseline-px:16px, $support-for-ie:false) {
//   //Conver the baseline into rems
//   $baseline-rem: $baseline-px / 1rem * 1; //Print the first line in pixel values
//   @if $support-for-ie {
//     #{$property}: $px-values;
//   } //if there is only one (numeric) value, return the property/value line for it.
//   @if type-of($px-values)=="number" {
//     #{$property}: $px-values / $baseline-rem;
//   }
//   @else {
//     //Create an empty list that we can dump values into
//     $rem-values: ();
//     @each $value in $px-values {
//       // If the value is zero or not a number, return it
//       @if $value==0 or type-of($value) !="number" {
//         $rem-values: append($rem-values, $value / $baseline-rem);
//       }
//     } // Return the property and its list of converted values
//     #{$property}: $rem-values;
//   }
// }
